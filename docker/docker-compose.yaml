version: '3.3'

volumes:
  prometheus_data: {}
  grafana_data: {}
  alertmanager_data: {}
  verneauth_data: {}

services:
  traefik:
    image: "traefik:v2.7"
    container_name: "traefik"
    command:
      - "--log.level=INFO"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.mqtts.address=:8883"
      - "--certificatesresolvers.ssl.acme.tlschallenge=true"
      - "--certificatesresolvers.ssl.acme.email=mitwelten.technik@fhnw.ch"
      - "--certificatesresolvers.ssl.acme.storage=/letsencrypt/acme.json"

    ports:
      - "80:80"
      - "443:443"
      - "8883:8883"

    volumes:
      - "/etc/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

    restart: always

  viz-api:
    image: mitwelten-viz:0.1
    container_name: "mitwelten-viz-api-v1"
    volumes:
      - "/opt/mitwelten-db-backend_api_v1/services/viz:/app"
      - "/opt/mitwelten-db-backend_api_v1/credentials.py:/app/credentials.py"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.viz_api.loadbalancer.server.port=80"

      # for https
      - "traefik.http.routers.viz_api_insecure.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/viz/v1/`)"
      - "traefik.http.routers.viz_api_insecure.entrypoints=http"
      # redirect to https
      - "traefik.http.middlewares.viz-api-https.redirectscheme.scheme=https"
      - "traefik.http.routers.viz_api_insecure.middlewares=viz-api-https"

      # for https
      - "traefik.http.routers.viz_api.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/viz/v1/`)"
      - "traefik.http.routers.viz_api.entrypoints=https"
      - "traefik.http.routers.viz_api.tls.certresolver=ssl"

      #  middlewares for https
      - "traefik.http.routers.viz_api.middlewares=viz-api-cors,viz-api-stripprefix,viz-api-basic-auth"

      # strip prefix /viz/v1
      - "traefik.http.middlewares.viz-api-stripprefix.stripprefix.prefixes=/viz/v1"

      # basic auth
      - "traefik.http.middlewares.viz-api-basic-auth.basicauth.users=${VIZ_API_BASIC_AUTH_USER_PW}"

      # CORS
      - "traefik.http.middlewares.viz-api-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,PATCH,DELETE"
      - "traefik.http.middlewares.viz-api-cors.headers.accessControlAllowOriginList=https://viz.mitwelten.org;http://localhost"
      - "traefik.http.middlewares.viz-api-cors.headers.accessControlAllowHeaders=*"
      - "traefik.http.middlewares.viz-api-cors.headers.accessControlExposeHeaders=*"
      - "traefik.http.middlewares.viz-api-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.viz-api-cors.headers.addvaryheader=true"

  viz-api-v2:
    image: mitwelten-viz:0.1
    container_name: mitwelten-viz-api-v2
    restart: unless-stopped
    volumes:
      - /opt/mitwelten-db-backend/services/viz:/app
      - /opt/mitwelten-db-backend/credentials.py:/app/credentials.py
    labels:
      - traefik.enable=true
      - traefik.http.services.viz_api_v2.loadbalancer.server.port=80

      # http entrypoint
      - traefik.http.routers.viz_api_v2_http.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/viz/v2/`)
      - traefik.http.routers.viz_api_v2_http.entrypoints=http
      # redirect to https
      - traefik.http.middlewares.viz_api_v2_https.redirectscheme.scheme=https
      - traefik.http.routers.viz_api_v2_http.middlewares=viz_api_v2_https
      # https entrypoint
      - traefik.http.routers.viz_api_v2.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/viz/v2/`)
      - traefik.http.routers.viz_api_v2.entrypoints=https
      - traefik.http.routers.viz_api_v2.tls.certresolver=ssl
      #  middlewares for https
      - traefik.http.routers.viz_api_v2.middlewares=viz_api_v2_cors,viz_api_v2_stripprefix,viz_api_v2_basic-auth

      # strip prefix /viz/v2
      - traefik.http.middlewares.viz_api_v2_stripprefix.stripprefix.prefixes=/viz/v2

      # basic auth
      - traefik.http.middlewares.viz_api_v2_basic-auth.basicauth.users=${VIZ_API_BASIC_AUTH_USER_PW}

      # CORS
      - traefik.http.middlewares.viz_api_v2_cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,PATCH,DELETE
      - traefik.http.middlewares.viz_api_v2_cors.headers.accessControlAllowOriginList=https://viz.mitwelten.org;http://localhost
      - traefik.http.middlewares.viz_api_v2_cors.headers.accessControlAllowHeaders=*
      - traefik.http.middlewares.viz_api_v2_cors.headers.accessControlExposeHeaders=*
      - traefik.http.middlewares.viz_api_v2_cors.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.viz_api_v2_cors.headers.addvaryheader=true


  manager-api:
    image: mitwelten-manager:0.1
    container_name: "mitwelten-manager-api-v1"
    volumes:
      - "/opt/mitwelten-db-backend_api_v1/services/manager:/app"
      - "/opt/mitwelten-db-backend_api_v1/credentials.py:/app/credentials.py"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.manager_api.loadbalancer.server.port=80"

      # for https
      - "traefik.http.routers.manager_api_insecure.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/manager/v1/`)"
      - "traefik.http.routers.manager_api_insecure.entrypoints=http"
      # redirect to https
      - "traefik.http.middlewares.manager-api-https.redirectscheme.scheme=https"
      - "traefik.http.routers.manager_api_insecure.middlewares=manager-api-https"

      # for https
      - "traefik.http.routers.manager_api.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/manager/v1/`)"
      - "traefik.http.routers.manager_api.entrypoints=https"
      - "traefik.http.routers.manager_api.tls.certresolver=ssl"

      #  middlewares for https
      - "traefik.http.routers.manager_api.middlewares=manager-api-cors,manager-api-stripprefix,manager-api-basic-auth"

      # strip prefix /manager/v1
      - "traefik.http.middlewares.manager-api-stripprefix.stripprefix.prefixes=/manager/v1"

      # basic auth
      - "traefik.http.middlewares.manager-api-basic-auth.basicauth.users=${MANAGER_API_BASIC_AUTH_USER_PW}"

      # CORS
      - "traefik.http.middlewares.manager-api-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,PATCH,DELETE"
      - "traefik.http.middlewares.manager-api-cors.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.manager-api-cors.headers.accessControlAllowHeaders=*"
      - "traefik.http.middlewares.manager-api-cors.headers.accessControlExposeHeaders=*"
      - "traefik.http.middlewares.manager-api-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.manager-api-cors.headers.addvaryheader=true"

    restart: always

  manager-api-v2:
    image: mitwelten-manager:0.1
    container_name: mitwelten-manager-api-v2
    restart: unless-stopped
    volumes:
      - /opt/mitwelten-db-backend/services/manager:/app
      - /opt/mitwelten-db-backend/credentials.py:/app/credentials.py
    labels:
      - traefik.enable=true
      - traefik.http.services.manager_api_v2.loadbalancer.server.port=80

      # http entrypoint
      - traefik.http.routers.manager_api_v2_http.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/manager/v2/`)
      - traefik.http.routers.manager_api_v2_http.entrypoints=http
      # redirect to https
      - traefik.http.middlewares.manager_api_v2_https.redirectscheme.scheme=https
      - traefik.http.routers.manager_api_v2_http.middlewares=manager_api_v2_https
      # https entrypoint
      - traefik.http.routers.manager_api_v2.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/manager/v2/`)
      - traefik.http.routers.manager_api_v2.entrypoints=https
      - traefik.http.routers.manager_api_v2.tls.certresolver=ssl
      #  middlewares for https
      - traefik.http.routers.manager_api_v2.middlewares=manager_api_v2_cors,manager_api_v2_stripprefix,manager_api_v2_basic-auth

      # strip prefix /manager/v2
      - traefik.http.middlewares.manager_api_v2_stripprefix.stripprefix.prefixes=/manager/v2

      # basic auth
      - traefik.http.middlewares.manager_api_v2_basic-auth.basicauth.users=${MANAGER_API_BASIC_AUTH_USER_PW}

      # CORS
      - traefik.http.middlewares.manager_api_v2_cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,PATCH,DELETE
      - traefik.http.middlewares.manager_api_v2_cors.headers.accessControlAllowOriginList=*
      - traefik.http.middlewares.manager_api_v2_cors.headers.accessControlAllowHeaders=*
      - traefik.http.middlewares.manager_api_v2_cors.headers.accessControlExposeHeaders=*
      - traefik.http.middlewares.manager_api_v2_cors.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.manager_api_v2_cors.headers.addvaryheader=true

  deployment-frontend:
    image: nginx:alpine
    container_name: "deployment-frontend"
    volumes:
      - "/opt/deployment-frontend/public:/usr/share/nginx/html"
      - "/opt/deployment-frontend/nginx.conf:/etc/nginx/conf.d/default.conf"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.deployment-frontend.loadbalancer.server.port=80"

      # for https
      - "traefik.http.routers.deployment-frontend_insecure.rule=Host(`deploy.mitwelten.org`)"
      - "traefik.http.routers.deployment-frontend_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.deployment-frontend-https.redirectscheme.scheme=https"
      - "traefik.http.routers.deployment-frontend_insecure.middlewares=deployment-frontend-https"

      # for https
      - "traefik.http.routers.deployment-frontend.rule=Host(`deploy.mitwelten.org`)"
      - "traefik.http.routers.deployment-frontend.entrypoints=https"
      - "traefik.http.routers.deployment-frontend.tls.certresolver=ssl"

    restart: always

  pipeline-frontend:
    image: nginx:alpine
    container_name: "pipeline-frontend"
    volumes:
      - "/opt/pipeline-frontend/public:/usr/share/nginx/html"
      - "/opt/pipeline-frontend/nginx.conf:/etc/nginx/conf.d/default.conf"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pipeline-frontend.loadbalancer.server.port=80"

      # for https
      - "traefik.http.routers.pipeline-frontend_insecure.rule=Host(`detect.mitwelten.org`)"
      - "traefik.http.routers.pipeline-frontend_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.pipeline-frontend-https.redirectscheme.scheme=https"
      - "traefik.http.routers.pipeline-frontend_insecure.middlewares=pipeline-frontend-https"

      # for https
      - "traefik.http.routers.pipeline-frontend.rule=Host(`detect.mitwelten.org`)"
      - "traefik.http.routers.pipeline-frontend.entrypoints=https"
      - "traefik.http.routers.pipeline-frontend.tls.certresolver=ssl"

    restart: always

  geo:
    image: mitwelten-geo:0.1
    container_name: "geo"
    volumes:
      - "/opt/mitwelten-db-backend/services/geo:/app"
      - "/opt/mitwelten-db-backend/credentials.py:/app/credentials.py"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.geo.loadbalancer.server.port=80"

      # for http
      - "traefik.http.routers.geo_insecure.rule=Host(`data.mitwelten.org`)&&(PathPrefix(`/geo/v1/`) || PathPrefix(`/geo/v2/`))"
      - "traefik.http.routers.geo_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.geo-https.redirectscheme.scheme=https"
      - "traefik.http.routers.geo_insecure.middlewares=geo-https"

      # for https
      - "traefik.http.routers.geo.rule=Host(`data.mitwelten.org`)&&(PathPrefix(`/geo/v1/`) || PathPrefix(`/geo/v2/`))"
      - "traefik.http.routers.geo.entrypoints=https"
      - "traefik.http.routers.geo.tls.certresolver=ssl"
      - "traefik.http.middlewares.geo-redirect.redirectregex.regex=^https://data.mitwelten.org/geo/v1/(.*)"
      - "traefik.http.middlewares.geo-redirect.redirectregex.replacement=https://data.mitwelten.org/geo/v2/$${1}"
      - "traefik.http.middlewares.geo-redirect.redirectregex.permanent=true"
      - "traefik.http.routers.geo.middlewares=geo-redirect"

      #  middlewares for https
      - "traefik.http.routers.geo.middlewares=geo-cors,geo-stripprefix"

      # strip prefix /geo/v2
      - "traefik.http.middlewares.geo-stripprefix.stripprefix.prefixes=/geo/v2"

      # CORS
      - "traefik.http.middlewares.geo-cors.headers.accesscontrolallowmethods=GET,OPTIONS"
      - "traefik.http.middlewares.geo-cors.headers.accessControlAllowOriginList=https://www.mitwelten.org"
      - "traefik.http.middlewares.geo-cors.headers.accessControlAllowHeaders=*"
      - "traefik.http.middlewares.geo-cors.headers.accessControlExposeHeaders=*"
      - "traefik.http.middlewares.geo-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.geo-cors.headers.addvaryheader=true"

    restart: always

  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    container_name: prometheus
    volumes:
      - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../monitoring/prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
      - ../monitoring/prometheus/alerts:/etc/prometheus/alerts
      - ../monitoring/prometheus/sd:/etc/prometheus/sd
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle' # reload configuration with curl -X POST http://localhost:9090/-/reload
    ports:
      - 9090:9090
    expose:
      - 9090
    restart: unless-stopped

  grafana:
    hostname: grafana
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - ../monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ../monitoring/grafana/provisioning/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ../monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    links:
      - prometheus:prometheus
    depends_on:
      - prometheus
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.grafana.loadbalancer.server.port=3000

      # for http
      - 'traefik.http.routers.grafana_insecure.rule=Host(`status.mitwelten.org`)'
      - traefik.http.routers.grafana_insecure.entrypoints=http

      # redirect to https
      - traefik.http.middlewares.viz-api-https.redirectscheme.scheme=https
      - traefik.http.routers.grafana_insecure.middlewares=viz-api-https

      # for https
      - 'traefik.http.routers.grafana.rule=Host(`status.mitwelten.org`)'
      - traefik.http.routers.grafana.entrypoints=https
      - traefik.http.routers.grafana.tls.certresolver=ssl

  alertmanager:
    container_name: alertmanager
    hostname: alertmanager
    image: prom/alertmanager:latest
    volumes:
      - ../monitoring/alertmanager/:/etc/alertmanager/
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    ports:
      - 9093:9093
    restart: unless-stopped

  vernemq:
    image: erlio/docker-vernemq:1.10.0-alpine
    container_name: vernemq
    restart: always
    volumes:
      - "../services/mqtt/vernemq.conf.local:/vernemq/etc/vernemq.conf.local"
    environment:
      - DOCKER_VERNEMQ_ACCEPT_EULA=yes
    #ports:
    #  - 1883:1883
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.vernemq.entrypoints=mqtts"
      - "traefik.tcp.routers.vernemq.rule=HostSNI(`mqtt.mitwelten.org`)"
      - "traefik.tcp.routers.vernemq.tls.certresolver=ssl"
      - "traefik.tcp.services.vernemq.loadbalancer.server.port=1883"

  verneauth:
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/fhnw-verneauth:1.0
    container_name: verneauth
    restart: always
    volumes:
      - verneauth_data:/opt/verneauth/data

  verneauth-ui:
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/mitwelten-verneauth_ui:1.0
    container_name: verneauth-ui
    restart: always
    depends_on:
     - verneauth
    #ports:
    #  - 5005:5000
    environment:
      - USERNAME=${VERNEAUTH_UI_USERNAME}
      - PASSWORD_HASH=${VERNEAUTH_UI_PASSWORD_HASH}
      - VERNEAUTH_URL=http://verneauth:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.vaui.loadbalancer.server.port=5000"

      # for http
      - "traefik.http.routers.vaui_insecure.rule=Host(`mqtt-console.mitwelten.org`)"
      - "traefik.http.routers.vaui_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.vaui-https.redirectscheme.scheme=https"
      - "traefik.http.routers.vaui_insecure.middlewares=vaui-https"

      # for https
      - "traefik.http.routers.vaui.rule=Host(`mqtt-console.mitwelten.org`)"
      - "traefik.http.routers.vaui.entrypoints=https"
      - "traefik.http.routers.vaui.tls.certresolver=ssl"

  viz-dashboard-server:
    env_file: ${VIZ_DASHBOARD_SERVER_ENV_FILE}
    restart: always
    container_name: viz-dashboard-server
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/mitwelten-viz_dashboard_api:0.1
    volumes:
      - "${VIZ_DASHBOARD_SQLITE_FILE}:/usr/src/app/users.sqlite"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.dashboardsrv.loadbalancer.server.port=8080"

      # for http
      - "traefik.http.routers.dashboardsrv_insecure.rule=(Host(`viz.mitwelten.org`) && PathPrefix(`/api`))"
      - "traefik.http.routers.dashboardsrv_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.dashboardsrv-https.redirectscheme.scheme=https"
      - "traefik.http.routers.dashboardsrv_insecure.middlewares=dashboardsrv-https"

      # for https
      - "traefik.http.routers.dashboardsrv.rule=(Host(`viz.mitwelten.org`) && PathPrefix(`/api`))"
      - "traefik.http.routers.dashboardsrv.entrypoints=https"
      - "traefik.http.routers.dashboardsrv.tls.certresolver=ssl"


  viz-dashboard-client:
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/mitwelten-viz_dashboard_client:0.2
    restart: always
    container_name: viz-dashboard-client
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.dashboardclient.loadbalancer.server.port=3000"

      # for http
      - "traefik.http.routers.dashboardclient_insecure.rule=(Host(`viz.mitwelten.org`) && PathPrefix(`/`))"
      - "traefik.http.routers.dashboardclient_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.dashboardclient-https.redirectscheme.scheme=https"
      - "traefik.http.routers.dashboardclient_insecure.middlewares=dashboardclient-https"

      # for https
      - "traefik.http.routers.dashboardclient.rule=(Host(`viz.mitwelten.org`) && PathPrefix(`/`))"
      - "traefik.http.routers.dashboardclient.entrypoints=https"
      - "traefik.http.routers.dashboardclient.tls.certresolver=ssl"
