version: '3.3'

volumes:
  prometheus_data: {}
  grafana_data: {}
  alertmanager_data: {}
  verneauth_data: {}

networks:
  mitwelten:
    external: false
    ipam:
      config:
        - subnet: 192.168.0.0/16

services:
  traefik:
    image: "traefik:v2.8.8"
    networks:
      - mitwelten
    container_name: "traefik"
    command:
      - "--log.level=INFO"
      - "--api"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.mqtts.address=:8883"
      - "--certificatesresolvers.ssl.acme.tlschallenge=true"
      - "--certificatesresolvers.ssl.acme.email=mitwelten.technik@fhnw.ch"
      - "--certificatesresolvers.ssl.acme.storage=/letsencrypt/acme.json"
      - "--providers.file.filename=/configs/traefik_tls.yml"
      - "--providers.file.watch=true"

    labels:
      # Dashboard
      - "traefik.enable=true"
      - "traefik.http.services.admin.loadbalancer.server.port=443"
      - "traefik.http.routers.traefik.rule=Host(`v000744.fhnw.ch`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=admin"
      - "traefik.http.routers.traefik.tls.certresolver=ssl"
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.middlewares.admin.basicauth.users=${MANAGER_API_BASIC_AUTH_USER_PW}"

    ports:
      - "80:80"
      - "443:443"
      - "8883:8883"

    volumes:
      - "/etc/letsencrypt:/letsencrypt"
      - "/opt/mitwelten-db-backend/docker/traefik_tls.yml:/configs/traefik_tls.yml"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

    restart: always

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:legacy
    networks:
      - mitwelten
    restart: unless-stopped
    environment:
      KEYCLOAK_USER: ${KC_USERNAME}
      KEYCLOAK_PASSWORD: ${KC_PASSWORD}
      DB_VENDOR: POSTGRES
      DB_ADDR: ${KC_DB_HOST}
      DB_DATABASE: ${KC_DATABASE}
      DB_USER: ${KC_DB_USERNAME}
      DB_PASSWORD: ${KC_DB_PASSWORD}
      DB_SCHEMA: ${KC_DB_SCHEMA}
      PROXY_ADDRESS_FORWARDING: "true"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.kc.loadbalancer.server.port=8080"

      # for http
      - "traefik.http.routers.kc_insecure.rule=Host(`auth.mitwelten.org`)"
      - "traefik.http.routers.kc_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.kc-https.redirectscheme.scheme=https"
      - "traefik.http.routers.kc_insecure.middlewares=kc-https"

      # for https
      - "traefik.http.routers.kc.rule=Host(`auth.mitwelten.org`)"
      - "traefik.http.routers.kc.entrypoints=https"
      - "traefik.http.routers.kc.tls.certresolver=ssl"

  pushprox:
    container_name: pushprox
    image: prom/pushprox:master
    networks:
      - mitwelten
    restart: unless-stopped
    entrypoint: ["/app/pushprox-proxy", "--web.listen-address=:8082"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pushprox.loadbalancer.server.port=8082"

      # for http
      - "traefik.http.routers.pushprox_insecure.rule=Host(`push.mitwelten.org`)"
      - "traefik.http.routers.pushprox_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.pushprox-https.redirectscheme.scheme=https"
      - "traefik.http.routers.pushprox_insecure.middlewares=pushprox-https"

      # for https
      - "traefik.http.routers.pushprox.rule=Host(`push.mitwelten.org`)"
      - "traefik.http.routers.pushprox.entrypoints=https"
      - "traefik.http.routers.pushprox.tls.certresolver=ssl"

  labelstudio:
    container_name: labelstudio
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/mitwelten-labelstudio:1.0
    networks:
      - mitwelten
    restart: unless-stopped
    volumes:
      - /opt/label-studio:/label-studio/data
    environment:
      # DJANGO_DB: default
      # POSTGRE_NAME: ${LS_DB_NAME}
      # POSTGRE_USER: ${LS_DB_USERNAME}
      # POSTGRE_PASSWORD: ${LS_DB_PASSWORD}
      # POSTGRE_PORT: ${LS_DB_PORT}
      # POSTGRE_HOST: ${LS_DB_HOST}
      LABEL_STUDIO_USERNAME: ${LS_USERNAME}
      LABEL_STUDIO_PASSWORD: ${LS_PASSWORD}
      LABEL_STUDIO_DISABLE_SIGNUP_WITHOUT_LINK: "true"
      S3_ENDPOINT: ${LS_S3_ENDPOINT}

    labels:
      - "traefik.enable=true"
      - "traefik.http.services.ls.loadbalancer.server.port=8080"

      # for http
      - "traefik.http.routers.ls_insecure.rule=Host(`label.mitwelten.org`)"
      - "traefik.http.routers.ls_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.ls-https.redirectscheme.scheme=https"
      - "traefik.http.routers.ls_insecure.middlewares=ls-https"

      # for https
      - "traefik.http.routers.ls.rule=Host(`label.mitwelten.org`)"
      - "traefik.http.routers.ls.entrypoints=https"
      - "traefik.http.routers.ls.tls.certresolver=ssl"

  manager-api-v2:
    image: mitwelten-manager:0.1
    networks:
      - mitwelten
    container_name: mitwelten-manager-api-v2
    restart: unless-stopped
    volumes:
      - /opt/mitwelten-db-backend/services/manager:/app
      - /opt/mitwelten-db-backend/credentials.py:/app/credentials.py
    labels:
      - traefik.enable=true
      - traefik.http.services.manager_api_v2.loadbalancer.server.port=80

      # http entrypoint
      - traefik.http.routers.manager_api_v2_http.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/manager/v2/`)
      - traefik.http.routers.manager_api_v2_http.entrypoints=http
      # redirect to https
      - traefik.http.middlewares.manager_api_v2_https.redirectscheme.scheme=https
      - traefik.http.routers.manager_api_v2_http.middlewares=manager_api_v2_https
      # https entrypoint
      - traefik.http.routers.manager_api_v2.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/manager/v2/`)
      - traefik.http.routers.manager_api_v2.entrypoints=https
      - traefik.http.routers.manager_api_v2.tls.certresolver=ssl
      #  middlewares for https
      - traefik.http.routers.manager_api_v2.middlewares=manager_api_v2_cors,manager_api_v2_stripprefix,manager_api_v2_basic-auth

      # strip prefix /manager/v2
      - traefik.http.middlewares.manager_api_v2_stripprefix.stripprefix.prefixes=/manager/v2

      # basic auth
      - traefik.http.middlewares.manager_api_v2_basic-auth.basicauth.users=${MANAGER_API_BASIC_AUTH_USER_PW}

      # CORS
      - traefik.http.middlewares.manager_api_v2_cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,PATCH,DELETE
      - traefik.http.middlewares.manager_api_v2_cors.headers.accessControlAllowOriginList=*
      - traefik.http.middlewares.manager_api_v2_cors.headers.accessControlAllowHeaders=*
      - traefik.http.middlewares.manager_api_v2_cors.headers.accessControlExposeHeaders=*
      - traefik.http.middlewares.manager_api_v2_cors.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.manager_api_v2_cors.headers.addvaryheader=true

  data-api:
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/mitwelten-data-api:3.8
    networks:
      - mitwelten
    container_name: mitwelten-data-api-v3
    restart: unless-stopped
    volumes:
      - /opt/mitwelten-db-backend/services/api:/service/api
      - /opt/mitwelten-db-backend/credentials.py:/service/credentials.py
    labels:
      - traefik.enable=true
      - traefik.http.services.data_api_v3.loadbalancer.server.port=80

      # http entrypoint
      - traefik.http.routers.data_api_v3_http.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/api/v3/`)
      - traefik.http.routers.data_api_v3_http.entrypoints=http
      # redirect to https
      - traefik.http.middlewares.data_api_v3_https.redirectscheme.scheme=https
      - traefik.http.routers.data_api_v3_http.middlewares=data_api_v3_https
      # https entrypoint
      - traefik.http.routers.data_api_v3.rule=Host(`data.mitwelten.org`)&&PathPrefix(`/api/v3/`)
      - traefik.http.routers.data_api_v3.entrypoints=https
      - traefik.http.routers.data_api_v3.tls.certresolver=ssl
      #  middlewares for https
      - traefik.http.routers.data_api_v3.middlewares=data_api_v3_cors,data_api_v3_stripprefix

      # strip prefix /api/v3
      - traefik.http.middlewares.data_api_v3_stripprefix.stripprefix.prefixes=/api/v3

      # enable compression
      - traefik.http.middlewares.data_api_v3_compress.compress=true

      # CORS
      - traefik.http.middlewares.data_api_v3_cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,PATCH,DELETE
      - traefik.http.middlewares.data_api_v3_cors.headers.accessControlAllowOriginList=*
      - traefik.http.middlewares.data_api_v3_cors.headers.accessControlAllowHeaders=*
      - traefik.http.middlewares.data_api_v3_cors.headers.accessControlExposeHeaders=*
      - traefik.http.middlewares.data_api_v3_cors.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.data_api_v3_cors.headers.addvaryheader=true

  deployment-frontend:
    image: nginx:alpine
    networks:
      - mitwelten
    container_name: "deployment-frontend"
    volumes:
      - "/opt/deployment-frontend/public:/usr/share/nginx/html"
      - "/opt/deployment-frontend/nginx.conf:/etc/nginx/conf.d/default.conf"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.deployment-frontend.loadbalancer.server.port=80"

      # for https
      - "traefik.http.routers.deployment-frontend_insecure.rule=Host(`deploy.mitwelten.org`)"
      - "traefik.http.routers.deployment-frontend_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.deployment-frontend-https.redirectscheme.scheme=https"
      - "traefik.http.routers.deployment-frontend_insecure.middlewares=deployment-frontend-https"

      # for https
      - "traefik.http.routers.deployment-frontend.rule=Host(`deploy.mitwelten.org`)"
      - "traefik.http.routers.deployment-frontend.entrypoints=https"
      - "traefik.http.routers.deployment-frontend.tls.certresolver=ssl"

    restart: always

  wildcam-tv:
    image: nginx:alpine
    networks:
      - mitwelten
    container_name: "wildcam-tv"
    volumes:
      - "/opt/wildcam-tv/public:/usr/share/nginx/html"
      - "/opt/wildcam-tv/nginx.conf:/etc/nginx/conf.d/default.conf"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.wildcam-tv.loadbalancer.server.port=80"

      # for https
      - "traefik.http.routers.wildcam-tv_insecure.rule=Host(`tv.mitwelten.org`)"
      - "traefik.http.routers.wildcam-tv_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.wildcam-tv-https.redirectscheme.scheme=https"
      - "traefik.http.routers.wildcam-tv_insecure.middlewares=wildcam-tv-https"

      # for https
      - "traefik.http.routers.wildcam-tv.rule=Host(`tv.mitwelten.org`)"
      - "traefik.http.routers.wildcam-tv.entrypoints=https"
      - "traefik.http.routers.wildcam-tv.tls.certresolver=ssl"

    restart: always

  datawalk-webapp:
    image: nginx:alpine
    networks:
      - mitwelten
    container_name: "datawalk-webapp"
    volumes:
      - "/opt/datawalk-webapp/public:/usr/share/nginx/html"
      - "/opt/datawalk-webapp/nginx.conf:/etc/nginx/conf.d/default.conf"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.datawalk-webapp.loadbalancer.server.port=80"

      # for https
      - "traefik.http.routers.datawalk-webapp_insecure.rule=Host(`walk.mitwelten.org`)"
      - "traefik.http.routers.datawalk-webapp_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.datawalk-webapp-https.redirectscheme.scheme=https"
      - "traefik.http.routers.datawalk-webapp_insecure.middlewares=datawalk-webapp-https"

      # for https
      - "traefik.http.routers.datawalk-webapp.rule=Host(`walk.mitwelten.org`)"
      - "traefik.http.routers.datawalk-webapp.entrypoints=https"
      - "traefik.http.routers.datawalk-webapp.tls.certresolver=ssl"

    restart: always

  pipeline-frontend:
    image: nginx:alpine
    networks:
      - mitwelten
    container_name: "pipeline-frontend"
    volumes:
      - "/opt/pipeline-frontend/public:/usr/share/nginx/html"
      - "/opt/pipeline-frontend/nginx.conf:/etc/nginx/conf.d/default.conf"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.pipeline-frontend.loadbalancer.server.port=80"

      # for https
      - "traefik.http.routers.pipeline-frontend_insecure.rule=Host(`detect.mitwelten.org`)"
      - "traefik.http.routers.pipeline-frontend_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.pipeline-frontend-https.redirectscheme.scheme=https"
      - "traefik.http.routers.pipeline-frontend_insecure.middlewares=pipeline-frontend-https"

      # for https
      - "traefik.http.routers.pipeline-frontend.rule=Host(`detect.mitwelten.org`)"
      - "traefik.http.routers.pipeline-frontend.entrypoints=https"
      - "traefik.http.routers.pipeline-frontend.tls.certresolver=ssl"

    restart: always

  batdetect-gui:
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/mitwelten-batdetect-gui:1.3
    networks:
      - mitwelten
    container_name: batdetect-gui
    volumes:
      - /opt/batdetect/annotations:/batdetect2_gui/annotations
      - /opt/batdetect/spectrogram:/batdetect2_gui/data
    labels:
      - traefik.enable=true
      - traefik.http.services.batdetect_gui.loadbalancer.server.port=8000
      - traefik.http.middlewares.batdetect_gui-auth.basicauth.users=${MITWELTEN_BATS_BASIC_AUTH_USER_PW}

      # for http
      - traefik.http.routers.batdetect_gui_insecure.rule=Host(`bats.mitwelten.org`)
      - traefik.http.routers.batdetect_gui_insecure.entrypoints=http

      # redirect to https
      - traefik.http.middlewares.batdetect_gui-https.redirectscheme.scheme=https
      - traefik.http.routers.batdetect_gui_insecure.middlewares=batdetect_gui-https

      # for https
      - traefik.http.routers.batdetect_gui.rule=Host(`bats.mitwelten.org`)
      - traefik.http.routers.batdetect_gui.entrypoints=https
      - traefik.http.routers.batdetect_gui.tls.certresolver=ssl

      #  middlewares for https
      - traefik.http.routers.batdetect_gui.middlewares=batdetect_gui-auth

    restart: always

  geo:
    image: mitwelten-geo:0.1
    networks:
      - mitwelten
    container_name: "geo"
    volumes:
      - "/opt/mitwelten-db-backend/services/geo:/app"
      - "/opt/mitwelten-db-backend/credentials.py:/app/credentials.py"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.geo.loadbalancer.server.port=80"

      # for http
      - "traefik.http.routers.geo_insecure.rule=Host(`data.mitwelten.org`)&&(PathPrefix(`/geo/v1/`) || PathPrefix(`/geo/v2/`))"
      - "traefik.http.routers.geo_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.geo-https.redirectscheme.scheme=https"
      - "traefik.http.routers.geo_insecure.middlewares=geo-https"

      # for https
      - "traefik.http.routers.geo.rule=Host(`data.mitwelten.org`)&&(PathPrefix(`/geo/v1/`) || PathPrefix(`/geo/v2/`))"
      - "traefik.http.routers.geo.entrypoints=https"
      - "traefik.http.routers.geo.tls.certresolver=ssl"
      - "traefik.http.middlewares.geo-redirect.redirectregex.regex=^https://data.mitwelten.org/geo/v1/(.*)"
      - "traefik.http.middlewares.geo-redirect.redirectregex.replacement=https://data.mitwelten.org/geo/v2/$${1}"
      - "traefik.http.middlewares.geo-redirect.redirectregex.permanent=true"
      - "traefik.http.routers.geo.middlewares=geo-redirect"

      #  middlewares for https
      - "traefik.http.routers.geo.middlewares=geo-cors,geo-stripprefix"

      # strip prefix /geo/v2
      - "traefik.http.middlewares.geo-stripprefix.stripprefix.prefixes=/geo/v2"

      # CORS
      - "traefik.http.middlewares.geo-cors.headers.accesscontrolallowmethods=GET,OPTIONS"
      - "traefik.http.middlewares.geo-cors.headers.accessControlAllowOriginList=https://www.mitwelten.org"
      - "traefik.http.middlewares.geo-cors.headers.accessControlAllowHeaders=*"
      - "traefik.http.middlewares.geo-cors.headers.accessControlExposeHeaders=*"
      - "traefik.http.middlewares.geo-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.geo-cors.headers.addvaryheader=true"

    restart: always

  prometheus:
    image: prom/prometheus:latest
    networks:
      - mitwelten
    hostname: prometheus
    container_name: prometheus
    volumes:
      - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../monitoring/prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
      - ../monitoring/prometheus/alerts:/etc/prometheus/alerts
      - ../monitoring/prometheus/sd:/etc/prometheus/sd
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle' # reload configuration with curl -X POST http://localhost:9090/-/reload
    ports:
      - 9090:9090
    expose:
      - 9090
    restart: unless-stopped

  grafana:
    hostname: grafana
    container_name: grafana
    image: grafana/grafana:latest
    networks:
      - mitwelten
    volumes:
      - ../monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ../monitoring/grafana/provisioning/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ../monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    links:
      - prometheus:prometheus
    depends_on:
      - prometheus
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.grafana.loadbalancer.server.port=3000

      # for http
      - 'traefik.http.routers.grafana_insecure.rule=Host(`status.mitwelten.org`)'
      - traefik.http.routers.grafana_insecure.entrypoints=http

      # redirect to https
      - traefik.http.middlewares.grafana-https.redirectscheme.scheme=https
      - traefik.http.routers.grafana_insecure.middlewares=grafana-https

      # for https
      - 'traefik.http.routers.grafana.rule=Host(`status.mitwelten.org`)'
      - traefik.http.routers.grafana.entrypoints=https
      - traefik.http.routers.grafana.tls.certresolver=ssl

  alertmanager:
    container_name: alertmanager
    hostname: alertmanager
    image: prom/alertmanager:latest
    networks:
      - mitwelten
    depends_on:
      - prom2teams
    volumes:
      - ../monitoring/alertmanager/:/etc/alertmanager/
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    ports:
      - 9093:9093
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.services.am.loadbalancer.server.port=9093

      # for http
      - 'traefik.http.routers.am-http.rule=Host(`status.mitwelten.org`) && PathPrefix(`/alertmanager`)'
      - traefik.http.routers.am-http.entrypoints=http

      # redirect to https
      - traefik.http.middlewares.am-https.redirectscheme.scheme=https
      - traefik.http.routers.am-http.middlewares=am-https

      # for https
      - 'traefik.http.routers.am.rule=Host(`status.mitwelten.org`) && PathPrefix(`/alertmanager`)'
      - traefik.http.routers.am.entrypoints=https
      - traefik.http.routers.am.tls.certresolver=ssl

      #  middlewares for https
      - traefik.http.routers.am.middlewares=am-stripprefix

      # strip prefix /api/v3
      - traefik.http.middlewares.am-stripprefix.stripprefix.prefixes=/alertmanager

  prom2teams:
    container_name: prom2teams
    hostname: prom2teams
    image: idealista/prom2teams:4.2.1
    networks:
      - mitwelten
    restart: unless-stopped
    environment:
      PROM2TEAMS_CONNECTOR: ${TEAMS_WEBHOOK_URL}
    ports:
      - 8089:8089

  vernemq:
    image: erlio/docker-vernemq:1.10.0-alpine
    networks:
      - mitwelten
    container_name: vernemq
    restart: always
    volumes:
      - "../services/mqtt/vernemq.conf.local:/vernemq/etc/vernemq.conf.local"
    environment:
      - DOCKER_VERNEMQ_ACCEPT_EULA=yes
    #ports:
    #  - 1883:1883
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.vernemq.entrypoints=mqtts"
      - "traefik.tcp.routers.vernemq.rule=HostSNI(`mqtt.mitwelten.org`)"
      - "traefik.tcp.routers.vernemq.tls.certresolver=ssl"
      - "traefik.tcp.services.vernemq.loadbalancer.server.port=1883"

  verneauth:
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/fhnw-verneauth:1.0
    networks:
      - mitwelten
    container_name: verneauth
    restart: always
    volumes:
      - verneauth_data:/opt/verneauth/data

  verneauth-ui:
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/mitwelten-verneauth_ui:1.0
    networks:
      - mitwelten
    container_name: verneauth-ui
    restart: always
    depends_on:
     - verneauth
    #ports:
    #  - 5005:5000
    environment:
      - USERNAME=${VERNEAUTH_UI_USERNAME}
      - PASSWORD_HASH=${VERNEAUTH_UI_PASSWORD_HASH}
      - VERNEAUTH_URL=http://verneauth:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.vaui.loadbalancer.server.port=5000"

      # for http
      - "traefik.http.routers.vaui_insecure.rule=Host(`mqtt-console.mitwelten.org`)"
      - "traefik.http.routers.vaui_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.vaui-https.redirectscheme.scheme=https"
      - "traefik.http.routers.vaui_insecure.middlewares=vaui-https"

      # for https
      - "traefik.http.routers.vaui.rule=Host(`mqtt-console.mitwelten.org`)"
      - "traefik.http.routers.vaui.entrypoints=https"
      - "traefik.http.routers.vaui.tls.certresolver=ssl"

  mqtt-relay:
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/mitwelten-mqtt-relay:latest
    container_name: mqtt-relay
    restart: always
    networks:
      - mitwelten
    volumes:
      - /opt/mitwelten-db-backend/docker/mqtt_relay_configuration.yaml:/app/configuration.yaml

  mitwelten-explore:
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/mitwelten-explore:latest
    networks:
      - mitwelten
    restart: always
    container_name: mitwelten-explore
    environment:
      - KC_SERVER_URL=https://auth.mitwelten.org/auth/
      - KC_CLIENT_ID=explore
      - KC_REALM_NAME=mitwelten
      - DOMAIN_NAME=https://explore.mitwelten.org
      - REDIS_HOST=redis_cache
      - REDIS_PORT=6379
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.mwexplore.loadbalancer.server.port=80"

      # for http
      - "traefik.http.routers.mwexplore_insecure.rule=Host(`explore.mitwelten.org`)"
      - "traefik.http.routers.mwexplore_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.mwexplore-https.redirectscheme.scheme=https"
      - "traefik.http.routers.mwexplore_insecure.middlewares=mwexplore-https"

      # for https
      - "traefik.http.routers.mwexplore.rule=Host(`explore.mitwelten.org`)"
      - "traefik.http.routers.mwexplore.entrypoints=https"
      - "traefik.http.routers.mwexplore.tls.certresolver=ssl"

  mitwelten-cams:
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/mitwelten-cams-dashboard:latest
    networks:
      - mitwelten
    restart: always
    container_name: mitwelten-cams
    environment:
      - KC_SERVER_URL=https://auth.mitwelten.org/auth/
      - KC_CLIENT_ID=cams
      - KC_REALM_NAME=mitwelten
      - DOMAIN_NAME=https://cams.mitwelten.org
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.mwcams.loadbalancer.server.port=80"

      # for http
      - "traefik.http.routers.mwcams_insecure.rule=Host(`cams.mitwelten.org`)"
      - "traefik.http.routers.mwcams_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.mwcams-https.redirectscheme.scheme=https"
      - "traefik.http.routers.mwcams_insecure.middlewares=mwcams-https"

      # for https
      - "traefik.http.routers.mwcams.rule=Host(`cams.mitwelten.org`)"
      - "traefik.http.routers.mwcams.entrypoints=https"
      - "traefik.http.routers.mwcams.tls.certresolver=ssl"

  redis_cache:
    image: redis
    container_name: redis_cache
    restart: always
    networks:
      - mitwelten

  mitwelten-discover:
    image: cr.gitlab.fhnw.ch/mitwelten/docker-infrastructure/mitwelten-discover_app:latest
    networks:
      - mitwelten
    restart: always
    container_name: mitwelten-discover
    environment:
      - KC_SERVER_URL=https://auth.mitwelten.org/auth/
      - KC_CLIENT_ID=discover
      - KC_REALM_NAME=mitwelten
      - DOMAIN_NAME=https://discover.mitwelten.org
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.mwdiscover.loadbalancer.server.port=80"

      # for http
      - "traefik.http.routers.mwdiscover_insecure.rule=Host(`discover.mitwelten.org`)"
      - "traefik.http.routers.mwdiscover_insecure.entrypoints=http"

      # redirect to https
      - "traefik.http.middlewares.mwdiscover-https.redirectscheme.scheme=https"
      - "traefik.http.routers.mwdiscover_insecure.middlewares=mwdiscover-https"

      # for https
      - "traefik.http.routers.mwdiscover.rule=Host(`discover.mitwelten.org`)"
      - "traefik.http.routers.mwdiscover.entrypoints=https"
      - "traefik.http.routers.mwdiscover.tls.certresolver=ssl"
