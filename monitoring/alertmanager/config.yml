global:
  telegram_api_url: 'https://api.telegram.org'
  slack_api_url_file: /etc/alertmanager/slack_api_url

templates:
- templates/mitwelten_slack.tmpl

route:
  receiver: root
  group_by: [alertname]
  routes:
  - receiver: telegram
    continue: true
  - receiver: teams
    continue: true
    repeat_interval: 30m
    matchers:
    - severity = 'critical'
  - receiver: teams
    continue: true
    repeat_interval: 4h
    matchers:
    - severity = 'high'
  - receiver: teams
    continue: true
    repeat_interval: 12h
    matchers:
    - severity = 'medium'
  # - receiver: slack
  #   continue: true

receivers:
- name: root
- name: slack
  slack_configs:
  - channel: '#devops-bot'
    send_resolved: true
    color: '{{ template "slack.color" . }}'
    title: '{{ template "slack.title" . }}'
    text: '{{ template "slack.text" . }}'
    actions:
    - name: runbook
      type: button
      text: 'Runbook :green_book:'
      url: '{{ (index .Alerts 0).Annotations.runbook_url }}'
    - name: query
      type: button
      text: 'Query :mag:'
      url: '{{ (index .Alerts 0).GeneratorURL }}'
    - name: dashboard
      type: button
      text: 'Dashboard :chart_with_upwards_trend:'
      url: '{{ (index .Alerts 0).Annotations.dashboard_url }}'
    - name: silence
      type: button
      text: 'Silence :no_bell:'
      url: '{{ template "__alert_silence_link" . }}'

- name: telegram
  telegram_configs:
  - chat_id: 0 # <- put chat id
    bot_token: '' # <- put token
    send_resolved: true
    api_url: 'https://api.telegram.org'
    parse_mode: HTML

    # webhook_configs:
    # - send_resolved: True
    #   url: http://127.0.0.1:9088/alert/-xyz

- name: teams
  webhook_configs:
  - url: "http://prom2teams:8089"
    send_resolved: true

# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
# We use this to mute any warning-level notifications if the same alert is
# already critical.
inhibit_rules:
  - source_match:
      severity: critical
    target_match:
      severity: warning
    equal: # Apply inhibition if the alertname is the same.
      - alertname
      - cluster
      - service
